<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">set</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">string</includes>
    <includes local="no">stdexcept</includes>
    <includes refid="device_8hpp" local="yes">device.hpp</includes>
    <includes refid="mqtt__subscriber_8hpp" local="yes">mqtt_subscriber.hpp</includes>
    <incdepgraph>
      <node id="145">
        <label>sys/stat.h</label>
      </node>
      <node id="140">
        <label>list</label>
      </node>
      <node id="110">
        <label>valarray</label>
      </node>
      <node id="90">
        <label>atomic</label>
      </node>
      <node id="131">
        <label>sys/select.h</label>
      </node>
      <node id="127">
        <label>netinet/in.h</label>
      </node>
      <node id="124">
        <label>arpa/inet.h</label>
      </node>
      <node id="139">
        <label>iomanip</label>
      </node>
      <node id="87">
        <label>functional</label>
      </node>
      <node id="88">
        <label>queue</label>
      </node>
      <node id="115">
        <label>limits</label>
      </node>
      <node id="103">
        <label>iterator</label>
      </node>
      <node id="112">
        <label>cstdint</label>
      </node>
      <node id="97">
        <label>stdlib.h</label>
      </node>
      <node id="98">
        <label>include/nlohmann/json.hpp</label>
      </node>
      <node id="116">
        <label>cmath</label>
      </node>
      <node id="136">
        <label>errno.h</label>
      </node>
      <node id="114">
        <label>cassert</label>
      </node>
      <node id="148">
        <label>mqtt/client.h</label>
      </node>
      <node id="83">
        <label>stdexcept</label>
      </node>
      <node id="137">
        <label>fcntl.h</label>
      </node>
      <node id="104">
        <label>numeric</label>
      </node>
      <node id="82">
        <label>string</label>
      </node>
      <node id="146">
        <label>mqtt_subscriber.hpp</label>
        <link refid="mqtt__subscriber_8hpp_source"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>map</label>
      </node>
      <node id="143">
        <label>regex</label>
      </node>
      <node id="111">
        <label>exception</label>
      </node>
      <node id="138">
        <label>fstream</label>
      </node>
      <node id="126">
        <label>netdb.h</label>
      </node>
      <node id="122">
        <label>ostream</label>
      </node>
      <node id="79">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>ifaddrs.h</label>
      </node>
      <node id="142">
        <label>random</label>
      </node>
      <node id="135">
        <label>condition_variable</label>
      </node>
      <node id="128">
        <label>netinet/tcp.h</label>
      </node>
      <node id="130">
        <label>pthread.h</label>
      </node>
      <node id="121">
        <label>ios</label>
      </node>
      <node id="81">
        <label>cstdio</label>
      </node>
      <node id="94">
        <label>tuple</label>
      </node>
      <node id="92">
        <label>future</label>
      </node>
      <node id="133">
        <label>unistd.h</label>
      </node>
      <node id="89">
        <label>stack</label>
      </node>
      <node id="85">
        <label>vector</label>
      </node>
      <node id="95">
        <label>utility</label>
      </node>
      <node id="105">
        <label>array</label>
      </node>
      <node id="144">
        <label>sstream</label>
      </node>
      <node id="102">
        <label>iosfwd</label>
      </node>
      <node id="113">
        <label>cstdlib</label>
      </node>
      <node id="119">
        <label>clocale</label>
      </node>
      <node id="120">
        <label>cctype</label>
      </node>
      <node id="96">
        <label>iostream</label>
      </node>
      <node id="100">
        <label>cstddef</label>
      </node>
      <node id="109">
        <label>unordered_map</label>
      </node>
      <node id="123">
        <label>include/httplib/httplib.h</label>
      </node>
      <node id="134">
        <label>climits</label>
      </node>
      <node id="141">
        <label>mutex</label>
      </node>
      <node id="147">
        <label>chrono</label>
      </node>
      <node id="129">
        <label>csignal</label>
      </node>
      <node id="132">
        <label>sys/socket.h</label>
      </node>
      <node id="91">
        <label>thread</label>
      </node>
      <node id="84">
        <label>device.hpp</label>
        <link refid="device_8hpp_source"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>inputcontext.hpp</label>
        <link refid="inputcontext_8hpp_source"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>type_traits</label>
      </node>
      <node id="80">
        <label>set</label>
      </node>
      <node id="106">
        <label>forward_list</label>
      </node>
      <node id="99">
        <label>algorithm</label>
      </node>
      <node id="117">
        <label>cstring</label>
      </node>
      <node id="86">
        <label>memory</label>
      </node>
      <node id="118">
        <label>istream</label>
      </node>
      <node id="101">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="main_8cpp_1a70bb99d4d6c2e1a35c26a6c84222be7f" prot="public" static="no">
        <name>INPUT_KEY</name>
        <initializer>&quot;input&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="6" column="9" bodyfile="main.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1aaf1329031adc4fd484b6edc8abfd7434" prot="public" static="no">
        <name>INPUT_TYPE_KEY</name>
        <initializer>&quot;input_type&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="7" column="9" bodyfile="main.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1af2685dfc271d06adb84a0d94a31d0de3" prot="public" static="no">
        <name>INPUT_SETTINGS_KEY</name>
        <initializer>&quot;input_settings&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="8" column="9" bodyfile="main.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a35c11f02aa6db89430334483bd425831" prot="public" static="no">
        <name>OUTPUT_ERROR_KEY</name>
        <initializer>&quot;error&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="10" column="9" bodyfile="main.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a6bb3b62d951dfd91bb84d00c6d4580ea" prot="public" static="no">
        <name>OUTPUT_VALID_KEY</name>
        <initializer>&quot;valid_request&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="11" column="9" bodyfile="main.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a3cdc10e08bf545f186ce9ddc0f347dc0" prot="public" static="no">
        <name>INVALID_REQUEST_BODY</name>
        <initializer>&quot;invalid_request&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="12" column="9" bodyfile="main.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a20ec364faebf30a95ab7d9cad53f1f24" prot="public" static="no">
        <name>BAD_REQUEST_JSON</name>
        <initializer>&quot;request format isn&apos;t correct&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="13" column="9" bodyfile="main.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1a0320ad1b70d522baab095239e6454546" prot="public" static="no" mutable="no">
        <type>const std::set&lt; std::string &gt;</type>
        <definition>const std::set&lt;std::string&gt; InputType</definition>
        <argsstring></argsstring>
        <name>InputType</name>
        <initializer>= {
    &quot;UserManualInput&quot;,
    &quot;DisplayInput&quot;,
    &quot;MusicInput&quot;,
    &quot;WeatherInput&quot;,
    &quot;BrightnessInput&quot;,
    &quot;RandomInput&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="22" column="1" bodyfile="main.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Main driver function of the program, runs an HTTP server on port 8080 to process incoming requests (blocking!) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int - status code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="35" column="1" bodyfile="main.cpp" bodystart="35" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Driver program for the project, exposes an HTTP server on port 8080 to handle API requests. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#define<sp/>INPUT_KEY<sp/>&quot;input&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUT_TYPE_KEY<sp/>&quot;input_type&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUT_SETTINGS_KEY<sp/>&quot;input_settings&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUTPUT_ERROR_KEY<sp/>&quot;error&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUTPUT_VALID_KEY<sp/>&quot;valid_request&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INVALID_REQUEST_BODY<sp/>&quot;invalid_request&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BAD_REQUEST_JSON<sp/>&quot;request<sp/>format<sp/>isn&apos;t<sp/>correct&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;device.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mqtt_subscriber.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;<sp/>InputType<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;UserManualInput&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DisplayInput&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MusicInput&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WeatherInput&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BrightnessInput&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RandomInput&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">httplib;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>json<sp/>=<sp/>nlohmann::json;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Server<sp/>svr;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Application<sp/>context<sp/>instate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ctx<sp/>=<sp/>AppContext::getInstance();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;StartProcessingInputs();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>MQTT<sp/>Subscriber<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMqttSubscriber" kindref="compound">MqttSubscriber</ref><sp/>mqttSubscriber;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>mqttSubscriber.StartProcessingInputs();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Static<sp/>folder<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>svr.set_mount_point(</highlight><highlight class="stringliteral">&quot;/static&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;./static&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Route<sp/>to<sp/>get<sp/>reached<sp/>by<sp/>the<sp/>IoT<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>svr.Post(</highlight><highlight class="stringliteral">&quot;/start&quot;</highlight><highlight class="normal">,<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Request<sp/>&amp;req,<sp/>Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;StartProcessingInputs();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>svr.Post(</highlight><highlight class="stringliteral">&quot;/stop&quot;</highlight><highlight class="normal">,<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Request<sp/>&amp;req,<sp/>Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;Stop();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>svr.Post(</highlight><highlight class="stringliteral">&quot;/previous-setting&quot;</highlight><highlight class="normal">,<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Request<sp/>&amp;req,<sp/>Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;PopInput();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>svr.Post(</highlight><highlight class="stringliteral">&quot;/iot&quot;</highlight><highlight class="normal">,<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Request<sp/>&amp;req,<sp/>Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json<sp/>response;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json<sp/>requestJson<sp/>=<sp/>json::parse(req.body);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validating<sp/>all<sp/>mandatory<sp/>keys<sp/>from<sp/>the<sp/>JSON<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(requestJson.contains(INPUT_KEY)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestJson.contains(INPUT_TYPE_KEY)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestJson.contains(INPUT_SETTINGS_KEY))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parsing<sp/>the<sp/>values<sp/>from<sp/>each<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>requestType<sp/>=<sp/>requestJson[INPUT_TYPE_KEY];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>json<sp/>requestSettings<sp/>=<sp/>requestJson[INPUT_SETTINGS_KEY];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InputType.find(requestType)<sp/>!=<sp/>InputType.end())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pushing<sp/>json<sp/>to<sp/>the<sp/>context<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;AddInput(buildContext(requestJson[INPUT_KEY],<sp/>requestType));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[OUTPUT_VALID_KEY]<sp/>=<sp/>requestJson[INPUT_KEY];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(INVALID_REQUEST_BODY);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error<sp/>&amp;error)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[OUTPUT_ERROR_KEY]<sp/>=<sp/>BAD_REQUEST_JSON;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>response<sp/>to<sp/>user<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.set_content(response.dump(),<sp/></highlight><highlight class="stringliteral">&quot;text/json&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>svr.Get(</highlight><highlight class="stringliteral">&quot;/hi&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Request<sp/>&amp;req,<sp/>Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.set_content(</highlight><highlight class="stringliteral">&quot;Hello<sp/>World!&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Listening<sp/>on<sp/>port<sp/>8080...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>svr.listen(</highlight><highlight class="stringliteral">&quot;0.0.0.0&quot;</highlight><highlight class="normal">,<sp/>8080);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="114"><highlight class="comment">Example<sp/>request:</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/>Example<sp/>/iot</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/>curl<sp/>--header<sp/>&quot;Content-Type:<sp/>application/json&quot;<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--request<sp/>POST<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--data<sp/>&apos;{&quot;input_type&quot;:&quot;UserManualInput&quot;,&quot;input&quot;:{&quot;r&quot;:1,&quot;g&quot;:1,&quot;b&quot;:1,&quot;intensity&quot;:1},&quot;input_settings&quot;:&quot;{}&quot;}&apos;<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://localhost:8080/iot</highlight></codeline>
<codeline lineno="120"><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>curl<sp/>--header<sp/>&quot;Content-Type:<sp/>application/json&quot;<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--request<sp/>POST<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--data<sp/>&apos;{&quot;input_type&quot;:&quot;DisplayInput&quot;,&quot;input&quot;:[{&quot;r&quot;:1,&quot;g&quot;:1,&quot;b&quot;:1,&quot;intensity&quot;:1},{&quot;r&quot;:2,&quot;g&quot;:2,&quot;b&quot;:2,&quot;intensity&quot;:1},{&quot;r&quot;:3,&quot;g&quot;:3,&quot;b&quot;:3,&quot;intensity&quot;:1},{&quot;r&quot;:4,&quot;g&quot;:4,&quot;b&quot;:4,&quot;intensity&quot;:1}],&quot;input_settings&quot;:&quot;{}&quot;}&apos;<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://localhost:8080/iot</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/>curl<sp/>--header<sp/>&quot;Content-Type:<sp/>application/json&quot;<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--request<sp/>POST<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--data<sp/>&apos;{&quot;input_type&quot;:&quot;MusicInput&quot;,&quot;input&quot;:[{&quot;frequency&quot;:<sp/>1},{&quot;frequency&quot;:<sp/>1.25},{&quot;frequency&quot;:<sp/>1.5},{&quot;frequency&quot;:<sp/>2}],&quot;input_settings&quot;:&quot;{}&quot;}&apos;<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://localhost:8080/iot</highlight></codeline>
<codeline lineno="130"><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>curl<sp/>--header<sp/>&quot;Content-Type:<sp/>application/json&quot;<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--request<sp/>POST<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--data<sp/>&apos;{&quot;input_type&quot;:&quot;WeatherInput&quot;,&quot;input&quot;:{&quot;temperature&quot;:12.5},&quot;input_settings&quot;:&quot;{}&quot;}&apos;<sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://localhost:8080/iot</highlight></codeline>
<codeline lineno="135"><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/>curl<sp/>--header<sp/>&quot;Content-Type:<sp/>application/json&quot;<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--request<sp/>POST<sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--data<sp/>&apos;{&quot;input_type&quot;:&quot;BrightnessInput&quot;,&quot;input&quot;:[{&quot;intensity&quot;:<sp/>1},{&quot;intensity&quot;:<sp/>2},{&quot;intensity&quot;:<sp/>3},{&quot;intensity&quot;:<sp/>4}],&quot;input_settings&quot;:&quot;{}&quot;}&apos;<sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://localhost:8080/iot</highlight></codeline>
<codeline lineno="140"><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/>curl<sp/>--header<sp/>&quot;Content-Type:<sp/>application/json&quot;<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--request<sp/>POST<sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--data<sp/>&apos;{&quot;input_type&quot;:&quot;RandomInput&quot;,&quot;input&quot;:[],&quot;input_settings&quot;:&quot;{}&quot;}&apos;<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://localhost:8080/iot</highlight></codeline>
<codeline lineno="145"><highlight class="comment"></highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/>Example<sp/>/start</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/>Pentru<sp/>MQTT<sp/>daca<sp/>trimiti<sp/>in<sp/>JSON<sp/>cheia<sp/>&quot;start&quot;,<sp/>atunci<sp/>o<sp/>sa<sp/>dea<sp/>start</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/>curl<sp/>--header<sp/>&quot;Content-Type:<sp/>application/json&quot;<sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--request<sp/>POST<sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--data<sp/>&apos;{}&apos;<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://localhost:8080/start</highlight></codeline>
<codeline lineno="153"><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>Example<sp/>/stop</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>Pentru<sp/>MQTT<sp/>daca<sp/>trimiti<sp/>in<sp/>JSON<sp/>cheia<sp/>&quot;stop&quot;,<sp/>atunci<sp/>o<sp/>sa<sp/>dea<sp/>stop</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/>curl<sp/>--header<sp/>&quot;Content-Type:<sp/>application/json&quot;<sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--request<sp/>POST<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--data<sp/>&apos;{}&apos;<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://localhost:8080/stop</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/>Example<sp/>/previous-setting</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/>curl<sp/>--header<sp/>&quot;Content-Type:<sp/>application/json&quot;<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--request<sp/>POST<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--data<sp/>&apos;{}&apos;<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://localhost:8080/previous-setting</highlight></codeline>
<codeline lineno="166"><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="main.cpp"/>
  </compounddef>
</doxygen>
